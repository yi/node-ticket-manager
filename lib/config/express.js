// Generated by CoffeeScript 1.7.1
(function() {
  var express, flash, mongoStore, path, view_helper;

  express = require('express');

  mongoStore = require('connect-mongo')(express);

  flash = require('connect-flash');

  path = require("path");

  view_helper = require("../utils/view_helper");

  module.exports = function(app, config, passport) {
    var pathToView;
    app.set('showStackError', true);
    app.use(express.compress({
      filter: function(req, res) {
        return /json|text|javascript|css/.test(res.getHeader('Content-Type'));
      },
      level: 9
    }));
    app.use(express["static"](config.root + '/public'));
    if (process.env.NODE_ENV !== 'test') {
      app.use(express.logger('dev'));
    }
    app.use(express.basicAuth(config.basicAuth.username, config.basicAuth.password));
    pathToView = path.join(config.root, '/views');
    console.log("[express::main] pathToView:" + pathToView);
    app.set('views', config.root + '/views');
    app.set('view engine', 'jade');
    return app.configure(function() {
      app.use(express.bodyParser());
      app.use(express.methodOverride());
      app.use(app.router);
      app.use(function(err, req, res, next) {
        if (~err.message.indexOf('not found')) {
          return next();
        }
        console.error(err.stack);
        return res.status(500).render('500', {
          error: err.stack
        });
      });
      app.use(function(req, res, next) {
        return res.status(404).render('404', {
          url: req.originalUrl,
          error: 'Not found'
        });
      });
      return app.locals({
        VERSION: config.version,
        APP_NAME: config.app.name,
        helper: view_helper
      });
    });
  };

}).call(this);
