// Generated by CoffeeScript 1.7.1

/*
 * nodejs-express-mongoose-demo
 * Copyright(c) 2013 Madhusudhan Srinivasa <madhums8@gmail.com>
 * MIT Licensed
 */

(function() {
  var app, config, configs, debuglog, env, err, exports, express, externalConfig, fs, mongoose, p, path, pathToExternalConfig, pkg, port, _;

  express = require('express');

  fs = require('fs');

  p = require("commander");

  path = require("path");

  _ = require("underscore");

  debuglog = require("debug")("ticketman:server");

  pkg = JSON.parse(fs.readFileSync(path.join(__dirname, "../package.json")));

  p.version(pkg.version).option('-c, --config [VALUE]', 'path to config file').option('-p, --port [VALUE]', 'port to run this web service').option('-e, --environment  [VALUE]', 'application environment mode').parse(process.argv);

  env = p.environment || process.env.NODE_ENV || 'development';

  configs = require('./config/config');

  config = configs[env];

  config.version = pkg.version;

  config.root = path.resolve(__dirname, "../");

  debuglog("[server] config.root:" + config.root);

  if (p.config) {
    try {
      pathToExternalConfig = path.resolve(config.root, p.config);
      debuglog("pathToExternalConfig:" + pathToExternalConfig);
      externalConfig = JSON.parse(fs.readFileSync(pathToExternalConfig));
      debuglog("externalConfig:%j", externalConfig);
      _.extend(config, externalConfig);
    } catch (_error) {
      err = _error;
      debuglog("ERROR [server] fail to mixin externalConfig. " + err);
    }
  }

  mongoose = require('mongoose');

  mongoose.connect(config.db);

  if (env === 'development') {
    mongoose.set('debug', true);
  }

  require("./models/ticket");

  require("./models/worker");

  require("./utils/clear_db");

  app = express();

  require('./config/express')(app, config);

  require('./config/routes')(app);

  port = p.port || process.env.PORT || 3456;

  app.listen(port);

  debuglog("Ticketman app started on port " + port);

  exports = module.exports = app;

}).call(this);
