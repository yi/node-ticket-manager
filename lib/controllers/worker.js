// Generated by CoffeeScript 1.6.3
(function() {
  var Worker, mongoose;

  mongoose = require('mongoose');

  Worker = mongoose.model('Worker');

  exports.index = function(req, res, next) {
    Worker.find(function(err, workers) {
      if (err != null) {
        return next(err);
      }
      res.render('workers/index', {
        workers: workers
      });
    });
  };

  exports.create = function(req, res, next) {
    var ticket,
      _this = this;
    ticket = new Worker(req.body);
    ticket.save(function(err) {
      if (err != null) {
        return next(err);
      }
      switch (req.params.format) {
        case 'json':
          res.json(ticket);
          break;
        default:
          res.redirect("/workers");
      }
    });
  };

  exports.updateAt = function(req, res, next) {
    var signature, update, workerId;
    signature = req.headers['ticketman-authenticate'];
    if (!((signature != null) && signature.indexOf("Ticketman") === 0)) {
      return next(new Error("signature checking failed"));
    }
    workerId = (signature.match(/Ticketman ([^:]+)/) || EMPTY_ARRAY)[1];
    update = {
      updated_at: Date.now()
    };
    return Worker.findByIdAndUpdate(workerId, update, function(err, worker) {
      if (err != null) {
        return next(err);
      }
      return next();
    });
  };

}).call(this);
